/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package orm2tg.tg.schema;

import de.uni_koblenz.jgralab.EdgeDirection;

public interface Folder extends de.uni_koblenz.jgralab.Vertex {

	public static final de.uni_koblenz.jgralab.schema.VertexClass VC = orm2tg.tg.schema.UniquenessConstraint_nestedPrefRefScheme.instance().getGraphClass().getVertexClass("Folder");

	public java.lang.String get_folderPart1Name();

	public void set_folderPart1Name(java.lang.String _folderPart1Name);

	public int get_folderPart2ID();

	public void set_folderPart2ID(int _folderPart2ID);

	public orm2tg.tg.schema.preferredIdentifiers.Folder get_preferredIdentifiers();

	public void set_preferredIdentifiers(orm2tg.tg.schema.preferredIdentifiers.Folder _preferredIdentifiers);

	/**
	 * @return the next orm2tg.tg.schema.Folder vertex in the global vertex sequence
	 */
	public orm2tg.tg.schema.Folder getNextFolder();

	/**
	 * @return the first edge of class FolderPart2Hasfolder at this vertex
	 */
	public orm2tg.tg.schema.FolderPart2Hasfolder getFirstFolderPart2HasfolderIncidence();

	/**
	 * @return the first edge of class FolderPart2Hasfolder at this vertex
	 * @param orientation the orientation of the edge
	 */
	public orm2tg.tg.schema.FolderPart2Hasfolder getFirstFolderPart2HasfolderIncidence(EdgeDirection orientation);

	/**
	 * @return the first edge of class FolderPart1HasFolder at this vertex
	 */
	public orm2tg.tg.schema.FolderPart1HasFolder getFirstFolderPart1HasFolderIncidence();

	/**
	 * @return the first edge of class FolderPart1HasFolder at this vertex
	 * @param orientation the orientation of the edge
	 */
	public orm2tg.tg.schema.FolderPart1HasFolder getFirstFolderPart1HasFolderIncidence(EdgeDirection orientation);

	/**
	 * @return the first edge of class FolderHasFile at this vertex
	 */
	public orm2tg.tg.schema.FolderHasFile getFirstFolderHasFileIncidence();

	/**
	 * @return the first edge of class FolderHasFile at this vertex
	 * @param orientation the orientation of the edge
	 */
	public orm2tg.tg.schema.FolderHasFile getFirstFolderHasFileIncidence(EdgeDirection orientation);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderPart2Hasfolder or subtypes.
	 */
	public Iterable<orm2tg.tg.schema.FolderPart2Hasfolder> getFolderPart2HasfolderIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderPart2Hasfolder.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<orm2tg.tg.schema.FolderPart2Hasfolder> getFolderPart2HasfolderIncidences(EdgeDirection direction);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderPart1HasFolder or subtypes.
	 */
	public Iterable<orm2tg.tg.schema.FolderPart1HasFolder> getFolderPart1HasFolderIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderPart1HasFolder.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<orm2tg.tg.schema.FolderPart1HasFolder> getFolderPart1HasFolderIncidences(EdgeDirection direction);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderHasFile or subtypes.
	 */
	public Iterable<orm2tg.tg.schema.FolderHasFile> getFolderHasFileIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type FolderHasFile.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<orm2tg.tg.schema.FolderHasFile> getFolderHasFileIncidences(EdgeDirection direction);
}

/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package orm2tg.tg.schema.preferredIdentifiers;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.exception.GraphIOException;
import de.uni_koblenz.jgralab.exception.NoSuchAttributeException;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Folder implements de.uni_koblenz.jgralab.Record {
	private static List<String> componentNames = new ArrayList<>(2);

	static {
		componentNames.add("folderPart1Name");
		componentNames.add("folderPart2ID");
		componentNames = Collections.unmodifiableList(componentNames);
	}

	@Override
	public List<String> getComponentNames() {
		return componentNames;
	}

	@Override
	public boolean hasComponent(String name) {
		return componentNames.contains(name);
	}

	@Override
public int size() {
	return 2;
}

	private final java.lang.String _folderPart1Name;

	private final java.lang.String _folderPart2ID;

	public Folder(java.lang.String _folderPart1Name, java.lang.String _folderPart2ID) {
		this._folderPart1Name = _folderPart1Name;
		this._folderPart2ID = _folderPart2ID;
	}
	
	public Folder(java.util.Map<String, Object> componentValues) {
		assert componentValues.size() == 2;
		assert componentValues.containsKey("folderPart1Name");
		_folderPart1Name = (java.lang.String)componentValues.get("folderPart1Name");
		assert componentValues.containsKey("folderPart2ID");
		_folderPart2ID = (java.lang.String)componentValues.get("folderPart2ID");
	}

	public Folder(GraphIO io) throws GraphIOException {
		io.match(de.uni_koblenz.jgralab.impl.TgLexer.Token.LBR);
		_folderPart1Name = io.matchUtfString();
		_folderPart2ID = io.matchUtfString();
		io.match(de.uni_koblenz.jgralab.impl.TgLexer.Token.RBR);
	}

	public java.lang.String get_folderPart1Name() {
		return _folderPart1Name;
	}

	public java.lang.String get_folderPart2ID() {
		return _folderPart2ID;
	}

	@Override
	public Object getComponent(String name) {
		if (name.equals("folderPart1Name")) {
			return _folderPart1Name;
		}
		if (name.equals("folderPart2ID")) {
			return _folderPart2ID;
		}
		throw new NoSuchAttributeException("preferredIdentifiers.Folder doesn't contain an attribute " + name);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		String folderPart1NameString;
		if (_folderPart1Name == null) folderPart1NameString = "null";
		else folderPart1NameString = String.valueOf(_folderPart1Name);
		sb.append("[").append("folderPart1Name").append("=").append(folderPart1NameString);
		String folderPart2IDString;
		if (_folderPart2ID == null) folderPart2IDString = "null";
		else folderPart2IDString = String.valueOf(_folderPart2ID);
		sb.append(", ").append("folderPart2ID").append("=").append(folderPart2IDString);
		return sb.append("]").toString();
	}

	@Override
	public void writeComponentValues(GraphIO io) throws IOException, GraphIOException {
		io.write("(");
		io.writeUtfString(_folderPart1Name);
		io.writeUtfString(_folderPart2ID);
		io.write(")");
	}
	public org.pcollections.PMap<String, Object> toPMap() {
		org.pcollections.PMap<String, Object> m = de.uni_koblenz.jgralab.JGraLab.map();
		m = m.plus("folderPart1Name", _folderPart1Name);
		m = m.plus("folderPart2ID", _folderPart2ID);
		return m;
	}

	@Override
	public boolean equals(Object o) {
		if (o == null) {
			return false;
		}
		if (o instanceof Folder) {
			Folder rec = (Folder) o;
			if (!(_folderPart1Name.equals(rec._folderPart1Name))) {
				return false;
				}
			if (!(_folderPart2ID.equals(rec._folderPart2ID))) {
				return false;
				}
			return true;
		}
		if (o instanceof de.uni_koblenz.jgralab.Record) {
			de.uni_koblenz.jgralab.Record rec = (de.uni_koblenz.jgralab.Record) o;
			if (rec.size() != 2) {
				return false;
			}
			try {
				if (!rec.getComponent("folderPart1Name").equals(_folderPart1Name)) {
					return false;
				}
				if (!rec.getComponent("folderPart2ID").equals(_folderPart2ID)) {
					return false;
				}
				return true;
			} catch (NoSuchAttributeException e) {
				return false;
			}
		}
		return false;
	}

	@Override
	public int hashCode() {
		int h = 0;
		h += _folderPart1Name.hashCode();
		h += _folderPart2ID.hashCode();
		return h;
	}
}
